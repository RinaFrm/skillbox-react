webpackHotUpdate("main",{

/***/ "./src/hooks/useCommentsData.ts":
/*!**************************************!*\
  !*** ./src/hooks/useCommentsData.ts ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.useCommentsData = void 0;\r\nvar axios_1 = __importDefault(__webpack_require__(/*! axios */ \"./node_modules/axios/index.js\"));\r\nvar react_1 = __importDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\r\nfunction useCommentsData(subreddit, postId) {\r\n    var _a = react_1.default.useState({ comments: [] }), commentsData = _a[0], setCommentsData = _a[1];\r\n    react_1.default.useEffect(function () {\r\n        axios_1.default.get(\"https://api.reddit.com/r/\".concat(subreddit, \"/comments/\").concat(postId))\r\n            .then(function (response) {\r\n            var result = { comments: [] };\r\n            for (var _i = 0, _a = response.data[1].data.children; _i < _a.length; _i++) {\r\n                var comments = _a[_i];\r\n                result.comments.push({\r\n                    commentId: comments.data.id,\r\n                    author: comments.data.author,\r\n                    created: comments.data.created,\r\n                    karma: comments.data.score,\r\n                    body: comments.data.body,\r\n                    replies: comments.data.replies\r\n                });\r\n                console.log(replies);\r\n            }\r\n            setCommentsData(result);\r\n        })\r\n            .catch(console.log);\r\n    }, []);\r\n    return [commentsData];\r\n}\r\nexports.useCommentsData = useCommentsData;\r\n// const token = useSelector<RootState, string>(state => state.token)\r\n// const [loading, setLoading] = useState(false);\r\n// const [errorLoading, setErrorLoading] = useState('');\r\n// const loadComments = async () => {\r\n//   setLoading(true);\r\n//   setErrorLoading('');\r\n//   try {\r\n//     const resp = await axios.get(`http://api.reddit.com/r/${subreddit}/comments/${id}`, {})\r\n//     const commentsData = resp.data[1].data.children.map((item: IResponceItem) => {\r\n//       const { body, created, id, replies, author } = item.data;\r\n//       return {\r\n//         commentText: body,\r\n//         publishedData: created,\r\n//         id: id,\r\n//         replies: (replies) ? replies.data.children : undefined,\r\n//         author: author\r\n//       };\r\n//     });\r\n//     setComments(commentsData);\r\n//   } catch (error) {\r\n//     setErrorLoading(String(error));\r\n//   }\r\n//   setLoading(false);\r\n// } \r\n// useEffect(() => {\r\n//   loadComments();\r\n// }, [])\r\n\n\n//# sourceURL=webpack:///./src/hooks/useCommentsData.ts?");

/***/ })

})